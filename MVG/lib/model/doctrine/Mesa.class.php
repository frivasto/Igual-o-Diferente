<?php

/**
 * Mesa
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    MusicVideoGame
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Mesa extends BaseMesa
{
     public static function getMesaIncompleta(){
         //'m.id,m.jugador1_id'
        $mesa_incompleta=Doctrine_Core::getTable('Mesa')
                            ->createQuery('m')
                            ->where('m.estado=0')
                            ->limit(1)
                            ->fetchOne();
        return $mesa_incompleta;                 
     }
     public static function getMesaxId($mesa_id){         
        $mesa=Doctrine_Core::getTable('Mesa')
                            ->createQuery('m')
                            ->where('m.id=?',$mesa_id)                            
                            ->fetchOne();
        return $mesa;                 
     }
     public static function obtenerParejaJuego($user_actual,$mesa_id_jugador1){
            $jugador_pareja_id = 0;
            $jugador_actual = Jugador::getJugadorByUserId($user_actual);

            //SI JUGADOR NUNCA REGISTRADO, AGREGARLO, SINO TOMAR SU ID
            $id_jugador = 0;
            if (!empty($jugador_actual)) {
                $id_jugador = $jugador_actual->getId();
            } else {                
                $jugador_actual = new Jugador();
                $jugador_actual->setUserId($user_actual);
                $jugador_actual->save();
                $id_jugador = $jugador_actual->getId();
            }

            $id_mesa = $mesa_id_jugador1;
            //Buscar una mesa incompleta CON UN SOLO JUGADOR
            $mesa_inc = self::getMesaIncompleta();
            if (!empty($mesa_inc)) { // Si hay MESA INCOMPLETA                
                $jug_partner_id = $mesa_inc->getJugador1Id(); //OBTNER EL JUG QUE ESTA ALLI
                //SI NO ES EL MISMO JUG
                if ($jug_partner_id != $id_jugador) {                    
                    $id_mesa = $mesa_inc->getId();
                    //ACTUALIZAR AL JUGADOR2 QUE ES EL ACTUAL Y COMPLETAR LA MESA

                    $mesa_inc->setJugador2Id($id_jugador);
                    $mesa_inc->setEstado(1);
                    $mesa_inc->save();
               
                    //JUGADOR PARTNER 
                    $jug_partner = Jugador::getJugadorById($jug_partner_id);
                   
                    //JUGADOR ENCONTRADO
                    $jugador_pareja_id = $jug_partner->getId();
                    
                    //SET DE VIDEOS DE ESTA MESA Y JUGADOR 2
                    RelacionMesaVideo::generarSetVideos($id_mesa,$id_jugador); 
                    
                    //echo "mesaa_incompleta ".$id_mesa; die();
                }else{
                    if($id_mesa==0){
                           //NUEVA MESA
                           $mesa = new Mesa(); 
                           $mesa->setJugador1Id($id_jugador);
                           $mesa->setEstado(0); //Incompleta
                           $mesa->setTiempoEmparejar(time());
                           $mesa->save();
                           $id_mesa = $mesa->getId();
                           $jugador_pareja_id = 0;
                            
                           //SET DE VIDEOS DE ESTA MESA Y JUGADOR INICIAL
                           RelacionMesaVideo::generarSetVideos($id_mesa,$id_jugador);
                    }
                }

            } else { // Se quedo la mesa conmigo y estado incompleto  // Crearme una mesa y buscarme quien sera mi competidor---Crear Mesa para ambos
                    if($mesa_id_jugador1==0){
                        $mesa = new Mesa(); //NUEVA MESA
                        $mesa->setJugador1Id($id_jugador);
                        $mesa->setEstado(0); //Incompleta
                        $mesa->setTiempoEmparejar(time());
                        $mesa->save();
                        $id_mesa = $mesa->getId();

                        //JUGADOR ENCONTRADO
                        $jugador_pareja_id = 0;
                        
                        //SET DE VIDEOS DE ESTA MESA Y JUGADOR INICIAL
                        RelacionMesaVideo::generarSetVideos($id_mesa,$id_jugador);                        
                    }else{
                        //sólo indicar cual es el compañero de esa mesa
                        $mesa=Mesa::getMesaxId($mesa_id_jugador1);
                        //JUGADOR ENCONTRADO
                        if($mesa->getEstado()==1){                       
                            $jugador_pareja_id=$mesa->getJugador2Id();
                            $id_mesa=$mesa_id_jugador1;
                        }
                        //echo "mesa ya esta lista ".$id_mesa; die();  
                    }                                                          
            }           
            //-----------------------------------------------------------------------------------------
            $mesa_jugador=array();
            $mesa_jugador[0]=$jugador_pareja_id;
            $mesa_jugador[1]=$id_mesa;
            return $mesa_jugador;
     }
     public static function Emparejar($user_actual){
         
         
         $jugador_pareja_id = 0;
        $modoJugada = '';
        
        $mesa_id=0;       
      //  $date1 = time();
        $min = 0;
        $date1 = 0;
        $date2 = 0;
        $esta_completa=false;
        $mesa_tmp=NULL;
        
        //&& $jugadorObj->getEstado()!=1        
        //MIENTRAS NO HAYA PASADO TIEMPO ESPERA Y JUG REAL NO CONSEGUIDO        
        while ($min<=10 && $jugador_pareja_id == 0 && !$esta_completa) {
            //OBTENER PAREJA REAL
            $mesa_y_jug=Mesa::obtenerParejaJuego($user_actual,$mesa_id);
            $jugador_pareja_id=$mesa_y_jug[0];
            $mesa_id=$mesa_y_jug[1];
            $mesa_tmp=Mesa::getMesaxId($mesa_id);
            if($mesa_tmp->getEstado()==1)
                $esta_completa=true;
            $date1 = $mesa_tmp->getTiempoEmparejar();
            $date2= time();
            //$min = round(abs(strtotime($date2) - strtotime($date1)) / 60,2);
            $min = ($date2 - $date1);
        }       
        
        //NUNCA CONSIGUIÓ JUG REAL
        $jugadorObj=Jugador::getJugadorByUserId($user_actual);
        $jugador_actual_id=$jugadorObj->getId();
        
        //OBTENER JUGADOR COMPANIERO DE MESA ID (x condicion no devuielve el correcto)
        //************ SELECT `jugador1_id` FROM `mesa` WHERE `jugador2_id`=2 UNION SELECT `jugador2_id` FROM `mesa` WHERE `jugador1_id`=2
        $jugador1=$mesa_tmp->getJugador1Id();
        $jugador2=$mesa_tmp->getJugador2Id();
        if($jugador1!=NULL && $jugador2!=NULL){
            if($jugador1==$jugador_actual_id){
                //REENPLAZAR JUG_PAREJA_ID
                $jugador_pareja_id=$jugador2;
            }else{
                $jugador_pareja_id=$jugador1;
            }
        }else{
            //PARA QUE LE ASIGNEN BOT
            $jugador_pareja_id=0; 
        }
        //**************************************
                
        if ($jugador_pareja_id == 0) {
            $modoJugada = 'BOT';
            //DEVOLVER EL JUG BOT
            $jugadorBOT = Jugador::getJugador('BOT-001', 'BOT');           
            if (!empty($jugadorBOT)) {
                $jugadorBOT_id = $jugadorBOT->getId();
            }
            //ponerlo en la mesa de jugador actual            
            $mesa = Mesa::getMesaxId($mesa_id);
            $mesa->setJugador2Id($jugadorBOT_id); // El q me escogieron: BOT
            $mesa->setEstado(1); //COMPLETA
            $mesa->save();
            
            //echo "mesa bot jug ".$jugador_pareja_id." de mesa ".$mesa_id. " min:".$min ."_jugador:". $user_actual. "_estado_mesa:".$mesa_tmp->getEstado() ."clases: ".get_class($min).get_class($date1).get_class($date2); die();
            echo "mesa bot jug ".$jugador_pareja_id." de mesa ".$mesa_id. " min:".$min ."_jugador:". $user_actual. "_estado_mesa:".$mesa_tmp->getEstado() ."clases: ".$date1; die();
            $jugador_pareja_id=$jugadorBOT_id; //PAREJA ES EL 
            
            //GENERAR SET DE VIDEOS DE ESTA MESA COMPLETANDO PARA ESTE JUGADOR PAREJA O JUGADOR BOT
            RelacionMesaVideo::generarSetVideos($mesa_id,$jugador_pareja_id);
            
        } else if ($jugador_pareja_id != 0){
            $modoJugada = 'PAREJAS';               
        }else{
            $modoJugada = 'ERROR';
        }
//         
//         
//
//        $jugador_pareja_id = 0;
//        $modoJugada = '';
//         $mesa_id=0;
//      //  $date1 = time();
//        $min = 0;
//        $date1 = 0;
//        $date2 = 0;
//        $esta_completa=false;
//        $mesa_tmp=0;
//
//            //MIENTRAS NO HAYA PASADO TIEMPO ESPERA Y JUG REAL NO CONSEGUIDO
//            while ($min<=10 && $jugador_pareja_id == 0 && !$esta_completa) {
//                //OBTENER PAREJA REAL
//                $mesa_y_jug=Mesa::obtenerParejaJuego($user_actual,$mesa_id);
//                $jugador_pareja_id=$mesa_y_jug[0];
//                $mesa_id=$mesa_y_jug[1];
//                $mesa_tmp=Mesa::getMesaxId($mesa_id);
//                if($mesa_tmp->getEstado()==1)
//                    $esta_completa=true;
//                $date1 = $mesa_tmp->getTiempoEmparejar();
//                $date2= time();
//                //$min = round(abs(strtotime($date2) - strtotime($date1)) / 60,2);
//                $min = ($date2 - $date1);
//            }
//            //NUNCA CONSIGUIÓ JUG REAL
//
//            $jugadorObj=Jugador::getJugadorByUserId($user_actual);
//            $jugador_actual_id=$jugadorObj->getId();
//
//            if ($jugador_pareja_id == 0) {
//                $modoJugada = 'BOT';
//                //DEVOLVER EL JUG BOT
//                $jugadorBOT = Jugador::getJugador('BOT-001', 'BOT');
//                if (!empty($jugadorBOT)) {
//                    $jugadorBOT_id = $jugadorBOT->getId();
//                }
//                //ponerlo en la mesa de jugador actual
//                $mesa = Mesa::getMesaxId($mesa_id);
//                $mesa->setJugador2Id($jugadorBOT_id); // El q me escogieron: BOT
//                $mesa->setEstado(1); //COMPLETA
//                $mesa->save();
//                //echo "mesa bot jug ".$jugador_pareja_id." de mesa ".$mesa_id. " min:".$min ."_jugador:". $user_actual. "_estado_mesa:".$mesa_tmp->getEstado() ."clases: ".get_class($min).get_class($date1).get_class($date2); die();
//                echo "mesa bot jug ".$jugador_pareja_id." de mesa ".$mesa_id. " min:".$min ."_jugador:". $user_actual. "_estado_mesa:".$mesa_tmp->getEstado() ."clases: ".$date1; die();
//            } else if ($jugador_pareja_id != 0){
//                $modoJugada = 'PAREJAS';
//            }else{
//                $modoJugada = 'ERROR';
    //        }
//
            $respuesta['modoJugada'] = $modoJugada;
            $respuesta['mesaid'] = $mesa_id;
            $respuesta['jugadorid'] = $jugador_actual_id ;

            return $respuesta;

     }
}